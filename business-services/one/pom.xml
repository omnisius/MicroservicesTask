<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://maven.apache.org/POM/4.0.0"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.epam.javacc.microservices</groupId>
    <artifactId>business-services-parent</artifactId>
    <version>0.0.1-SNAPSHOT</version>
  </parent>
  <name>Java CC Microservices Reference Example Service One</name>
  <artifactId>taxi-service-rating</artifactId>
  <packaging>jar</packaging>
  <properties>
    <start-class>com.epam.javacc.microservices.one.FirstApplication</start-class>
  </properties>
  <build>
    <finalName>${project.artifactId}</finalName>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <addResources>false</addResources>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>docker</id>
      <properties>
        <PORT_TO_EXPOSE>8080</PORT_TO_EXPOSE>
        <JAR_NAME_TO_RUN>${project.build.finalName}.${project.packaging}</JAR_NAME_TO_RUN>
        <LABEL_DESCRIPTION>${project.name}</LABEL_DESCRIPTION>
        <LABEL_GROUP>${project.parent.groupId}</LABEL_GROUP>
        <LABEL_ID>${project.artifactId}</LABEL_ID>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>add-source</id>
                <phase>generate-sources</phase>
                <goals>
                  <goal>add-resource</goal>
                </goals>
                <configuration>
                  <resources>
                    <resource>
                      <directory>${base-path}/docker/springboot-app</directory>
                      <targetPath>${project.build.directory}/docker</targetPath>
                      <filtering>true</filtering>
                    </resource>
                  </resources>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>copyFinalJar</id>
                <phase>package</phase>
                <goals>
                  <goal>copy</goal>
                </goals>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>${project.groupId}</groupId>
                      <artifactId>${project.artifactId}</artifactId>
                      <version>${project.version}</version>
                      <type>jar</type>
                      <outputDirectory>${project.build.directory}/docker</outputDirectory>
                      <destFileName>${JAR_NAME_TO_RUN}</destFileName>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>imageBuild</id>
      <build>
        <plugins>
          <plugin>
            <groupId>com.spotify</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <version>${docker-maven-plugin.version}</version>
            <configuration>
              <!-- <imageName>${master_host}:5000/${docker_image_prefix}/${project.artifactId}</imageName> 
                <dockerDirectory>${project.build.directory}/docker</dockerDirectory> -->
              <imageName>${docker_image_prefix}/${project.artifactId}</imageName>
              <imageTags>
                <imageTag>${project.version}</imageTag>
              </imageTags>
              <baseImage>java</baseImage>
              <entryPoint>["java", "-jar", "/${JAR_NAME_TO_RUN}"]</entryPoint>
              <resources>
                <resource>
                  <targetPath>/</targetPath>
                  <directory>${project.build.directory}/docker</directory>
                  <include>${JAR_NAME_TO_RUN}</include>
                </resource>
              </resources>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
  <dependencies>
    <dependency>
      <groupId>com.epam.javacc.microservices</groupId>
      <artifactId>two-api</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-eureka</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-feign</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-hystrix</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-spectator</artifactId>
    </dependency>
    <dependency>
      <groupId>com.netflix.servo</groupId>
      <artifactId>servo-graphite</artifactId>
    </dependency>
    <dependency>
      <groupId>com.netflix.feign</groupId>
      <artifactId>feign-core</artifactId>
      <version>${feign-core}</version>
    </dependency>
    <dependency>
      <groupId>com.netflix.feign</groupId>
      <artifactId>feign-slf4j</artifactId>
      <version>${feign-slf4j}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>com.epam.javacc.microservices</groupId>
      <artifactId>two-api</artifactId>
      <version>1.0-SNAPSHOT</version>
    </dependency>
  </dependencies>
</project>
